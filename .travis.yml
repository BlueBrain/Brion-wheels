env:
  global:
    - REPO_DIR=Brion
    # Commit from your-project that you want to build
    - BUILD_COMMIT=HEAD
    # pip dependencies to _build_ your project
    - BUILD_DEPENDS="numpy"
    # pip dependencies to _test_ your project.  Include any dependencies
    # that you need, that are also specified in BUILD_DEPENDS, this will be
    # a separate install.
    - TEST_DEPENDS="numpy nose"
    - PLAT=x86_64
    - UNICODE_WIDTH=32
    - secure: "a+9XuRVgKiGulXXcd7xBik0zuYaaxpBVS0RWBmQaC76OdU+xxipHWNLT002nK/vw2VjwTrBNxrvkMYbgEfMoWVYzDaf9pSrYzY9CEGZOxslLEZ4nliK4Az/PA59duVj5B13+ikuwRmYIbmoE/FbkvVvBmrAMFemeAGXb0IuF5ihKT/Pbl4k/PNRlQxYvBrt1gwo6Rruwi7f6Q2brqIXmIcFYsZiCSv4J8d7DtV2BsLfHhpqkGkjKQcvYQKiNOF97+Ll+lDaDSBuyB8nrky5oqI8sxN+bWMwLZI6tEgKA+4yzeGyviKod0izbsUIGB+lWu9sJZKN+jYbLIuXRm8HS6cPtMdlFbk/NYcfhragP0w3YY81ZjRa+7AJFb1EUMbhCOE31hYpZt/R51h7MSgQjAvFrwbayZ2vE3AklfVf5ZwyLXABLlEqSJHgDiZ5oEdUSqdNFQxQH6LpNrBOzjypLVYH+gDwzZhx9uNOloma/TXBvh1mxker+jJ3f8kjCuiqBTj0M/Q27q0NNn4FSNvxwC5RvLSvuZLHwHhEtA3vxkkp8svdLqsU1II1YwsabxOnnq3MQtK1WYlEIrmwa36J5KoN3Vr5W85WfCBQEOMhwzEX7fb9HPaLhO4CEAs0fl92MdioMEc63dTSsVY4jMRXypDSD5z5pI/GkIUJYh1HCSCI="


# You will likely prefer "language: generic" for travis configuration,
# rather than, say "language: python". Multibuild doesn't use
# Travis-provided Python but rather installs and uses its own, where the
# Python version is set from the MB_PYTHON_VERSION variable. You can still
# specify a language here if you need it for some unrelated logic and you
# can't use Multibuild-provided Python or other software present on a
# builder.
language: generic

# Required in Linux to invoke `docker` ourselves
services: docker

# Host distribution.  This is the distribution from which we run the build
# and test containers, via docker.
dist: xenial

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/Library/Caches/Homebrew

jobs:
  include:
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6

install:
    # Maybe get and clean and patch source
    - set -e
    - chmod +x run_me.sh
    - ./run_me.sh

after_success:
    - pip install twine
    - ls ${TRAVIS_BUILD_DIR}/dist
    - twine upload --verbose -u __token__ -p ${PYPI_PASSWORD} ${TRAVIS_BUILD_DIR}/dist/*
