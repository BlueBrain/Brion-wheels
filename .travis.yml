env:
  global:
    - REPO_DIR=Brion
    # Commit from your-project that you want to build
    - BUILD_COMMIT=HEAD
    # pip dependencies to _build_ your project
    - BUILD_DEPENDS="numpy"
    # pip dependencies to _test_ your project.  Include any dependencies
    # that you need, that are also specified in BUILD_DEPENDS, this will be
    # a separate install.
    - TEST_DEPENDS="numpy nose"
    - PLAT=x86_64
    - UNICODE_WIDTH=32
    - secure: "P/i8+AapzUHdoFGVZDYvYTPbcxSaJmmlYCSb1rv/sv/yaIj9WsaGPpxLbe68Tl6EO4KAcDLHGhzhg7ga21SQX2vwquBqxuzhZO76TLaxnHZg3DpLIqhnDTBhbFhra6GwD+KmVONzdiaRBQ5bhxz5HOfstYMDlWDW4sszqHOaXKZXI99WyIaq57XUA/a3mUKRSJb7tlEswknoRNC3L4BSddMqTm6SLfHRynzQnSn6mOPVm/f3inT0PCDM9ok22oiwETGFfUOxg6u6mps2E4axrlzGRALGypwrCrnKwmwgiJlOkbuThHJ6R0evX+ZvTiHQQ8EVNoF/5iSHO10WL6ReeGP690X0bZMwGcJcpZJqDpltJl20X8YZUkD1VoQg7ub49mPYD0REw8vszcZEsqV5u0MVxAANHMrulCJQzuzSZmSm7agZtCtwVInaBN76riHKAqyKocpA/nnd15W376PImBVrXwCPIG5smx6NCBh0qfWMIdLx4twIfHvrcPok7n/OMFoQknJ1IdZjzX/1MIXzpdN0jLAi9BQFv2zjpcQz2VXVDvAsJ//Ys+9W2bDLci79qJx6LwWxRNJHCW3jkGbxRt+HOeIvmf0wOn1zfPYJdJYM87k9qWL4mE8y17uYrcOV9gn1DHUB19Djaxxx2wEluL3kJS503TGf3IdqF2f+gnk="



# You will likely prefer "language: generic" for travis configuration,
# rather than, say "language: python". Multibuild doesn't use
# Travis-provided Python but rather installs and uses its own, where the
# Python version is set from the MB_PYTHON_VERSION variable. You can still
# specify a language here if you need it for some unrelated logic and you
# can't use Multibuild-provided Python or other software present on a
# builder.
language: generic

# Required in Linux to invoke `docker` ourselves
services: docker

# Host distribution.  This is the distribution from which we run the build
# and test containers, via docker.
dist: xenial

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/Library/Caches/Homebrew

jobs:
  include:
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6

install:
    # Maybe get and clean and patch source
    - chmod +x run_me.sh
    - ./run_me.sh


after_success:
    # Copy compiled wheels to dist/ where Travis `dpl` tool can find them and upload to PyPI
    - pip install twine
    - twine upload --verbose -u bbp.opensource -p ${PYPI_PASSWORD} {TRAVIS_BUILD_DIR}/dist/*
