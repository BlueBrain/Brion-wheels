env:
  global:
    - REPO_DIR=Brion
    # Commit from your-project that you want to build
    - BUILD_COMMIT=HEAD
    # pip dependencies to _build_ your project
    - BUILD_DEPENDS="numpy"
    # pip dependencies to _test_ your project.  Include any dependencies
    # that you need, that are also specified in BUILD_DEPENDS, this will be
    # a separate install.
    - TEST_DEPENDS="numpy nose"
    - PLAT=x86_64
    - UNICODE_WIDTH=32
    - secure: "pypi-AgEIcHlwaS5vcmcCJDgzNmNlMmRkLTcyODgtNDJlOC05N2NhLTY5Mzk3Zjk2MGQyNgACNnsicGVybWlzc2lvbnMiOiB7InByb2plY3RzIjogWyJicmlvbiJdfSwgInZlcnNpb24iOiAxfQAABiCie-sE7EmgWoufMLjVKzHcq0d7GJq5NA18rAzzOYTRHA"


# You will likely prefer "language: generic" for travis configuration,
# rather than, say "language: python". Multibuild doesn't use
# Travis-provided Python but rather installs and uses its own, where the
# Python version is set from the MB_PYTHON_VERSION variable. You can still
# specify a language here if you need it for some unrelated logic and you
# can't use Multibuild-provided Python or other software present on a
# builder.
language: generic

# Required in Linux to invoke `docker` ourselves
services: docker

# Host distribution.  This is the distribution from which we run the build
# and test containers, via docker.
dist: xenial

cache:
  directories:
    - $HOME/.cache/pip
    - $HOME/Library/Caches/Homebrew

jobs:
  include:
    - os: linux
      env:
        - MB_PYTHON_VERSION=3.6

install:
    # Maybe get and clean and patch source
    - set -e
    - chmod +x run_me.sh
    - ./run_me.sh

after_success:
    - pip install twine
    - ls ${TRAVIS_BUILD_DIR}/dist
    - test $TRAVIS_BRANCH = "master" && twine upload --verbose -u bbp.opensource -p ${PYPI_PASSWORD} ${TRAVIS_BUILD_DIR}/dist/*
